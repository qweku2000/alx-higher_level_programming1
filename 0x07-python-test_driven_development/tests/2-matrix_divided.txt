The ``2-matrix_divided`` module

Using ``matrix_divided``

Checking the module docstring:
	  >>> m = __import__("2-matrix_divided").__doc__
	  >>> len(m) > 1
	  True

Importing function:
	  matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking function docstring:
	 >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
	 >>> len(f) > 1
	 True

Checking for matrix of integers divided by a non zero number:
	 >>> matrix = [[1, 2, 3],[4, 5, 6]]
	 >>> matrix_divided(matrix, 1)
	 [[1, 2, 3],[4, 5, 6]]

Checking for a float div:
	 >>> matrix = [[2.3, 4.2, 7.8],[2.4, 5.0, 6.9]]
	 >>> matrix_divided(matrix, 1)
	 [[2.3, 4.2, 7.8],[2.4, 5.0, 6.9]]

Checking for a non number in matrix:
	 >>> matrix = [[1, 2, "3"],[4, 5, "6"]]
	 >>> matrix_divided(matrix, 1)
	 Traceback (most recent call last)
	 ...
	 TypeError("matrix must be a (list of lists) of integers/floats")

Checking for a non number div:
         >>> matrix = [[1, 2, "3"],[4, 5, "6"]]
         >>> matrix_divided(matrix, 1)
         Traceback (most recent call last)
         ...
         TypeError("matrix must be a (list of lists) of integers/floats")

Checking for a nn empty matrix:
	 >>> matrix = []
	 >>> matrix_divided(matrix,1)
	 Traceback (most recent call last)
         ...
         TypeError("matrix must be a (list of lists) of integers/floats")

Checking for a matrix with bool:
	 >>> matrix = [[ True, 2, 3],[False, 2,4,]]
	 >>> matrix_divided(matrix,1)
	 Traceback (most recent call last)
	 ...
	 TypeError("matrix must be a (list of lists) of integers/float)
